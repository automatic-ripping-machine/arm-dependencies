name: publish-image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
    # run every day at midnight
    schedule:
        - cron: '0 0 * * *'
    push:
        branches: [ main, indev, dev ]
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: ghcr.io
    # use DOCKERHUB_USERNAME as the name maybe different from the github username
    IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/arm-dependencies
    TAG: latest

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            -
                name: Checkout repository
                uses: actions/checkout@v3

            -
                name: Get branch name
                id: branch-name

                uses: tj-actions/branch-names@v6


            -
                name: Set tag for non-default branch
                if: steps.branch-name.outputs.is_default == 'false' && steps.branch-name.outputs.default_branch != ''
                run: |
                    echo "Branch name is ${{ steps.branch-name.outputs.ref_branch }}"
                    echo "Main name is ${{ steps.branch-name.outputs.default_branch }}"
                    echo "TAG=${{ steps.branch-name.outputs.ref_branch }}" >> $GITHUB_ENV

            -
                name: Set up QEMU
                uses: docker/setup-qemu-action@v2
                with:
                    platforms: all
            # Workaround: https://github.com/docker/build-push-action/issues/461
            -
                name: Setup Docker buildx
                uses: docker/setup-buildx-action@v2
            -
                name: Available platforms
                run: echo ${{ steps.buildx.outputs.platforms }}

            # Login against all registries
            # https://github.com/docker/login-action
            -
                name: Log into registry ${{ env.REGISTRY }}
                uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.repository_owner }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -
                name: Login to DockerHub
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            # Extract metadata (tags, labels) for Docker
            # https://github.com/docker/metadata-action
            -
                name: Extract Docker metadata
                id: meta
                uses: docker/metadata-action@12cce9efe0d49980455aaaca9b071c0befcdd702
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            -
                name: Set Version number
                run: |
                    VER=$(cat VERSION)
                    echo "VERSION=$VER" >> $GITHUB_ENV
            -
                name: Set build datetime
                run: |
                    TIMESTAMP=$(date -u +'%Y-%m-%d T%H:%M:%SZ')
                    echo "BUILD_DATE=$TIMESTAMP" >> $GITHUB_ENV
            # Build and push Docker image with Buildx
            # https://github.com/docker/build-push-action
            -
                # TODO: Update to only build for PRs
                name: Build and push Docker image
                id: build-and-push
                uses: docker/build-push-action@v3
                with:
                    context: .
                    platforms: linux/amd64,linux/arm64,linux/arm/v7
                    push: ${{ github.event_name != 'pull_request' }}
                    tags: |
                      ${{ env.IMAGE_NAME }}:${{ env.TAG }}
                      ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
                    labels: ${{ steps.meta.outputs.labels }}
                    build-args:
                      BUILD_DATE=${{ env.BUILD_DATE }}
                      VERSION=${{ env.VERSION }}

            -
                name: retag and push multiplatform images to multiple registries
                if: github.event_name != 'pull_request'
                uses: akhilerm/tag-push-action@v2.0.0
                with:
                    src: docker.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}
                    # make sure the github name is correct
                    dst: ${{ env.REGISTRY }}/${{ github.repository_owner }}/arm-dependencies:${{ env.TAG }},${{ env.REGISTRY }}/${{ github.repository_owner }}/arm-dependencies:${{ env.VERSION }}

